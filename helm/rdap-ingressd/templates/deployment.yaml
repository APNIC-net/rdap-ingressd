apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rdap-ingressd.fullname" . }}
  labels:
    {{- include "rdap-ingressd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rdap-ingressd.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  {{- with .Values.strategy }}
  strategy:
    {{- . | toYaml | trim | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rdap-ingressd.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: '/prometheus'
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ default "latest" .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if (or .Values.javaOpts .Values.proxy.enabled) }}
          env:
            - name: JAVA_OPTS
              value: >-2
                {{- if .Values.proxy.enabled }}
                -Dhttp.proxyHost={{ .Values.proxy.httpHost }}
                -Dhttp.proxyPort={{ .Values.proxy.httpPort }}
                -Dhttps.proxyHost={{ .Values.proxy.httpsHost }}
                -Dhttps.proxyPort={{ .Values.proxy.httpsPort }}
                -Dhttp.nonProxyHosts={{ join "|" .Values.proxy.noProxy }}
                {{- end }}
                {{- with .Values.javaOpts }}
                {{ . }}
                {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config/application-rdap.yml
              name: rdapd-config
              subPath: application-rdap.yml
          livenessProbe:
            tcpSocket:
              port: http
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{.Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - '! ( curl localhost:8080/prometheus | grep ^rdap_ingressd_scraper_status | cut -d " " -f 2 | grep "2\.0\|3\.0" )'
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | trim | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
        {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: rdapd-config
          configMap:
            name: {{ include "rdap-ingressd.fullname" . }}
